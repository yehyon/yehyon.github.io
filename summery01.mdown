##Structure of an HTML file#

###What is XML and HTML###

XML(Extensible Markup Language) is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. It is defined by W3C's XML 1.0 Specification and by several other related specifications, all of which are free open standards. 

###Applications of XML###

Document formats using XML syntax include: RSS, Atom, SOAP, and XHTML

###Root Element###

Each XML document has exactly one single *root element*. It encloses all the other elements and is therefore the sole parent element to all the other elements. ROOT elements are also called PARENT elements. 

###structure###

```
<parent>
	<child>content</child>
	<child attribute="att"/>
</parent>
   ```

###HTML's root element###

`<html>` is the only root element for an HTML document. As the parent element `<html>` comes with two child elements `<head></head>` and `<body></body>`. Structures in such format.

```
<html>
<head>
	<title></title>
</head>
<body>

</body>
</html>
```

the `<title></title>` element indicated the title that goes on the tab for the HTML document.

###Meta Tags###

Meta tags provide metadata about the HTML document. Matadata is not displayed on the page, but will be machine parsable. Basically the goal of a meta tag is to communicate with the machine not to the end user. 

###Structure of Meta Tags###

`<meta>` tags always go inside the `<head>` element. Metadata is always passed as name/value pairs. The content attribute *must* be defined if the name or the http-equiv attribute is defined. If none of these are defined, the content attribute cannot be defined. 

###Content Negotiation###

IT is a mechanism defined in the HTTP specification that makes it possible to serve different versions of a document at the same URI, so that user agents(such as web browsers) can specify which version fit their capabilities the best. For instance, when a user agent submits a request to a server for an image, the user agent informs the server what media types it understands with ratings of how well it understands them. More precisely, the user agent provides an Accept HTTP header that lists acceptable media types and associated quality factors. The server is then able to supply the version of the resource that best fits the user agent's needs. 

###HTTP-EQUIV###

This meta tag defines the header of an HTML document. This is a section of code that is sent to your browser before the rest of the page *(pragma directive)*. It communicates to your browser certain introductory information about the page. Think of it as a "Hello, I am a HTML page. I was born on such and such a date and live on such and such a server. I was last modified on such and such a day, etc..."

#####Directive pragma is a language construct that specifies how a compiler should process its input.#####

```
pre HTML5
<meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
post HTML5
<meta charset="UTF-8">
```

###Encoding###

*Encoding* is the process of putting a sequence of characters (letters, numbers, punctuation, and certain symbols) into a specialized format for effecient transmission or storage. 

###UTF-8###

#####Pros#####
-Capable of encoding all possible characters, or code points defined by Unicode. 
-바이트 표현의 첫 바이트만 사용하여 해당 바이트 표현의 길이를 결정할 수 있다. 따라서 부분 문자열을 얻는 과정이 매우 쉽다. 
-인코딩에 간단한 비트 연산만 사용되므로 효과적이다. UTF-8은 곱셈이나 나눗셈과 같은 느린 연산들을 사용하지 않는다. 

#####Cons#####
-대부분의 UTF-8 문자열은 일반적으로 적당한 기존 인코딩으로 표현한 문자열보다 더 크다. 판독 기호를 사용하는 대부분의 라틴 알파벳 문자는 적어도 2바이트를 사용하며, 한중일 문자들은 적어도 3바이트를 사용한다. 
-한중일 문자들과 표의 문자를 제외한 거의 모든 기존 인코딩들은 한 문자에 1바이트를 사용하므로 문자열 처리가 간편한 반면, UTF-8은 그렇지 않다. 


###Quirk Mode and Standard Mode###

Back in the old days, pages were written in two versions: One for Netscape Navigator, and one for Microsoft IE. When the web standards were made at W3C, browsers could not just start using them, as doing so would break most existing sites on the web. Browsers therefore introduced two modes to treat new standards compliant sites differently from old legacy sites. 

There are now three modes: *quirk mode* a layout that emulates nonstandard behavior in Navigator 4 and IE 5. This is essential in order to support websites before web standards. *Full standard mode* which behaves fully by HTML and CSS specifications, and *almost standard mode*. 

###DTD, Document Type Definition###

For HTML documents, browsers use a *DOCTYPE* in the beginning of the document to decide whether to handle in quirks mode, standards mode. To ensure your page uses full standards mode, make sure it contains `<!DOCTYPE html>` at the very top. Make sure it is on the top because anything before DOCTYPE will trigger *quirks mode* in *Internet Explorere 9 or older*.

```
<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<title></title>
</head>
<body>

</body>
</html>
```

###Making Sure Document is in Standard Mode###

Type in your inspect element console
```
document.compatMode
```
-Standard mode will display `CSS1Compat`
-Quirks mode will display `BackCompat`















